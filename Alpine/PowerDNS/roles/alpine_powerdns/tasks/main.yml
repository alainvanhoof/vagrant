---
# tasks file for alpine_powerdns

- name: Install PowerDNS recursor
  apk:
    name: pdns-recursor
    state: present
  when: pdns_recursor is defined

- name: Install PowerDNS authoritive server
  apk:
    name: pdns
    state: present
  when: pdns_authoritive is defined

- name: fix init script to enable guardian
  lineinfile:
    dest: /etc/init.d/pdns
    regexp: 'command_args="${command_args:-} --guardian=no --daemon=no --write-pid=no $pdns_config"'
    line: 'command_args="${command_args:-} --guardian=yes --daemon=no --write-pid=no $pdns_config"'
  when: pdns_authoritive is defined

- name: Install PowerDNS PostgreSQL backend
  apk:
    name: pdns-backend-pgsql
    state: present
  when: 
     - pdns_authoritive is defined
     - pdns_postgresql is defined

- name: Configure PowerDNS authoritive
  template:
    src: pdns.postgresql.conf.j2
    dest: /etc/pdns/pdns.conf
  when: 
     - pdns_authoritive is defined
     - pdns_postgresql is defined
  notify: Reload pdns

- name: Copy PowerDNS Table setup
  template:
    src: powerdns.sql.j2
    dest: /var/lib/postgresql/powerdns.sql
  when: 
     - pdns_authoritive is defined
     - pdns_postgresql is defined

- name: Create PowerDNS Tables 
  shell: su postgres -c "psql {{ pg_db_name }} < /var/lib/postgresql/powerdns.sql && touch /var/lib/postgresql/powerdns.sql.executed" 
  args:
    creates: /var/lib/postgresql/powerdns.sql.executed
  when: 
     - pdns_authoritive is defined
     - pdns_postgresql is defined

- name: Configure PowerDNS recursor
  template:
    src: recursor.conf.j2
    dest: /etc/pdns/recursor.conf
  when: pdns_recursor is defined
  notify: Restart pdns-recursor

- name: Start PowerDNS recursor
  service:
    name: pdns-recursor
    state: started
    enabled: true
  when: pdns_recursor is defined

- name: Start PowerDNS authoritive
  service:
    name: pdns
    state: started
    enabled: true
  when: pdns_authoritive is defined

...
